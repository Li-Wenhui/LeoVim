*shortkey.txt*  For Vim version 7.4.  最近更新：2016 年 8 月

   常用 GVIM 快捷键定义    作者：Leo

F1                         --
F2                         -- 打开 NERDTree 『非插入模式』
F3                         -- 打开 / 闭增强源代码浏览窗口
F4                         -- 后一个搜索项（Ctrl+f 建立的搜索列表）
F5                         --
F6                         -- 代码格式优化化
F7                         -- 一键保存并编译
F8                         --
F9                         -- 一键保存并连接
F10                        -- 一键保存、编译、连接存并运行
F11                        -- 用于 Windows Gvim 全屏窗口切换
F12                        -- 显示 / 隐藏菜单栏、工具栏、滚动条，可用  切换

Alt + n                    -- multi_cursor_next_key
Alt + p                    -- multi_cursor_prev_key
Alt + x                    -- multi_cursor_skip_key

Ctrl + ]                   -- 转到函数定义 [ctags 跳转』
Ctrl + ↑                  -- 减少窗口透明度 『非插入模式』
Ctrl + ↑                  -- 减少窗口透明度 『非插入模式』
Ctrl + ↓                  -- 增加窗口透明度 『非插入模式』
Ctrl + ↓                  -- 增加窗口透明度 『非插入模式』
Ctrl + A                   -- 将当前光标所在数字自增 1 『仅普通模式可用』
Ctrl + H                   -- 光标移当前行行首 『插入模式』
Ctrl + I                   -- 跳回下一个编辑位置 [Normal 模式』
Ctrl + J                   -- 光标移下一行行首 『插入模式』
Ctrl + K                   -- 光标移上一行行尾 『插入模式』
Ctrl + L                   -- 光标移当前行行尾 『插入模式』
Ctrl + O                   -- 跳到上一个编辑位置 [Normal 模式』
Ctrl + P                   -- 缓冲区补全 『插入模式』
Ctrl + p                   -- 调用插件 CtrlP『普通模式』
Ctrl + R                   -- 反撤消 『非插入模式』
Ctrl + T                   -- 窗口置顶模式切换 『非插入模式』
Ctrl + U                   -- 全能补全 『插入模式』
Ctrl + X                   -- 将当前光标所在数字自减 1 『仅普通模式可用』
Ctrl + w[hjkl]             -- 显示窗口切换

SHIFT + F4                 -- 前一个搜索项（Ctrl+f 建立的搜索列表）
Shift + Insert             -- 向 Vim 中粘贴从别处复制的内容
Tab 键                     -- 插入模式下的全功能语法结构补全 [snipMate 插件』

\a                         -- 复制所有至公共剪贴板 [Normal 模式可用』
\bb                        -- 按 = 号对齐代码 [Normal 模式可用』
\be                        -- 打开 BufExplorer 窗口 『独立显示』 [Normal 模式可用』
\bn                        -- 自定义对齐 [Normal 模式可用』
\bs                        -- 打开 BufExplorer 窗口 『分割显示』 [Normal 模式可用』
\bv                        -- 打开 BufExplorer 窗口 『边栏显示』 [Normal 模式可用』
\c                         -- 复制至公共剪贴板 『仅选择模式』
\cA                        -- 行尾注释
\ca                        -- 在 /* */ 与 // 这两种注释方式中切换
\cc                        -- 以每行一个 /* */ 注释选中行或区域，再输入则称重复注释
\ci                        -- 以每行一个 /* */ 注释选中行（选中区域所在行），再输入则取消注释
\cm                        -- 以一个 /* */ 注释选中行（选中区域所在行），再输入则称重复注释
\cs                        -- 连接已存在的 tags 与 cscope 文件
\cu                        -- 取消选中区域（行）的注释，选中区域（行）内至少有一个 /* */
\ec                        -- 开始拼写检查
\ee                        -- 结束拼写检查
\en                        -- 跳转到下一个拼写错误处
\ev                        -- 编辑当前所使用的 Vim 配置文件
\fe                        -- 打开 / 关闭文件编码窗口 [Normal 模式可用』
\gb                        -- 使用 Grep.vim 插件在工程内全局查找，设置快捷键。快捷键速记法：grep buffer
\gi                        -- 开启或关闭 GitGutter [Normal 模式可用』
\gid                       -- 打开 Git 文件对比模式 [Normal 模式可用』 『竖直』
\git                       -- 打开 Git 文件对比模式 [Normal 模式可用』 『水平』
\gp                        -- 使用 Grep.vim 插件在工程内全局查找，设置快捷键。快捷键速记法：grep project
\gs                        -- 自动生成 tags 与 cscope 文件并连接
\il                        -- 显示 / 关闭对齐线 [Normal 模式可用』
\mp                        -- 生成 Promptline 脚本文件 [Normal 模式可用』
\nt                        -- 打开 / 关闭 NERDTree 文件树窗口
\q                         -- 搜索光标处的单词并打开 Quickfix 搜索列表窗口

\r                         -- 替换：不确认、非整词
\rc                        -- 替换：确认、非整词
\rcw \rwc                  -- 替换：确认、整词
\rw                        -- 替换：不确认、整词

\rsb                       -- 删除行首空白
\rst                       -- 删除行尾空白
\rss                       -- 删除所有空行
\rsj                       -- 压缩空行 / 合并空行

\rm                        -- 去除 ^M（DOS 回车符）字符 『全模式可用』
\rt                        -- 替换全部 Tab 为空格 『全模式可用』

\sp                        -- 在工程内全局查找光标所在关键字
\ss                        -- source Vim 配置文件
\tb                        -- 打开 / 关闭 TagBar 窗口
\tc                        -- 执行 ctags 生成 tags
\tl                        -- 打开 / 关闭 TagList 窗口
\tn                        -- 遍历同名标签
\tp                        -- 反向遍历同名标签
\ud                        -- 调用 gundo 树
\v                         -- 从公共剪贴板粘贴 『全模式可用』

#                          -- 向前搜索当前光标所在字符
%                          -- 在匹配的括号间跳跃
(SpaceBar)                 -- 循环地打开 / 关闭当前折叠
*                          -- 向后搜索当前光标所在字符
/                          -- 向后搜索
?                          -- 向前搜索

[Ctrl+D                    -- 跳至当前光标所在变量的首次定义位置 『从文件头部开始』
[Ctrl+I                    -- 跳至当前光标所在变量的首次出现位置 『从文件头部开始』
[D                         -- 列出当前光标所在变量的所有定义位置 『从文件头部开始』
[I                         -- 列出当前光标所在变量的所有出现位置 『从文件头部开始』
[c                         -- 跳到上一个差异处
[z                         -- 到当前打开的折叠的开始处
]c                         -- 跳到下一个差异处
]z                         -- 到当前打开的折叠的末尾处
{ or }                     -- 按段落上 / 下跳跃
0 or ^ or $                -- 跳至 行首 or 第一个非空字符 or 行尾

ca 分隔符                  -- 删除指定分隔符之间的内容并进入插入模式 『包括分隔符』
cf 字符                    -- 删除本行内容，直到遇到第一个指定字符并进入插入模式 『包括该字符』
ci 分隔符                  -- 删除指定分隔符之间的内容并进入插入模式 『不包括分隔符』

ct 字符                    -- 删除本行内容，直到遇到第一个指定字符并进入插入模式 『不包括该字符』
cw ce c0 c^ c$ cc          -- 删除并进入插入模式
da 分隔符                  -- 删除指定分隔符之间的内容 『包括分隔符』
df 字符                    -- 删除本行内容，直到遇到第一个指定字符 『包括该字符』
di 分隔符                  -- 删除指定分隔符之间的内容 『不包括分隔符』
do                         -- 将对比文件所在差异行替换到当前文件 [get]
dp                         -- 将当前文件所在差异行替换到对比文件 [give]
dt 字符                    -- 删除本行内容，直到遇到第一个指定字符 『不包括该字符』
dw de d0 d^ d$ dd          -- 删除

f 字符                     -- 跳至从当前光标开始本行第一个指定字符出现的位置
gd                         -- 跳至当前光标所在单词首次出现的位置
gf                         -- 打开当前光标所在的文件名，如果确实存在该文件的话
gg                         -- 缩进整个文件

U 『大写』                 -- 整行复原 『非插入模式』
u 『小写』                 -- 单步复原 『非插入模式』
va 分隔符                  -- 选中指定分隔符之间的内容 『包括分隔符』
vf 字符                    -- 选中本行内容，直到遇到第一个指定字符 『包括该字符』
vi 分隔符                  -- 选中指定分隔符之间的内容 『不包括分隔符』
vt 字符                    -- 选中本行内容，直到遇到第一个指定字符 『不包括该字符』
vw ve v0 v^ v$ vv          -- 选中
ya 分隔符                  -- 复制指定分隔符之间的内容 『包括分隔符』
yf 字符                    -- 复制本行内容，直到遇到第一个指定字符 『包括该字符』
yi 分隔符                  -- 复制指定分隔符之间的内容 『不包括分隔符』
yt 字符                    -- 复制本行内容，直到遇到第一个指定字符 『不包括该字符』
yw ye y0 y^ y$ yy          -- 复制
za                         -- 打开或关闭当前折叠
zA                         -- 循环地打开 / 关闭当前折叠
zC                         -- 对所在范围内所有嵌套的折叠点进行折叠
zc                         -- 关闭当前折叠
zj                         -- 向下移动到后一个折叠的开始处
zk                         -- 向上移动到前一个折叠的结束处
zM                         -- 关闭所有折叠
zo                         -- 打开当前折叠
zO                         -- 对所在范围内所有嵌套的折叠点展开
zR                         -- 打开所有折叠

:%!xxd                     -- 转储二进制文件，以十六进制形式显示
:%!xxd -r                  -- 还原二进制文件
:A                         -- 切换头文件并独占整个窗口
:AS                        -- 切换头文件并水平分割窗口
:AV                        -- 切换头文件并垂直分割窗口
:g/^/m0                    -- 将整个文件所有行排列顺序颠倒 『命令模式』
:set syntax=cpp            -- 手动选择语法高亮 『或 :set filetype=cpp]

:%s/exp/str/[flags]        -- 全文替换匹配内容
:s/regexp/repstr/[flags]   -- 在当前行中替换
:n,ms/exp/str/[flags]      -- 替换 n-m 行的匹配内容
                           -- [flags] g: 替换所有匹配；gc: 每次替换要求确认
:%s/^\s*//g                -- 删除行首空格 (\rsb)
:%s/\s*$//g                -- 删除行尾空格 (\rst)
:g/^$/d                    -- 刪除沒有內容的空行
:g/^\s*$/d                 -- 刪除包含有空格組成的空行
:g/^[ |\t]*$/d             -- 除以空格或 tab 开头到结尾的空行
:g/^\s*$/d                 -- 删除所有空白行 (\rss)
:v/./.,/./-j               -- 合并连续的空行
:g/^$/,/./-j               -- 压缩空行 (\rsj)
:%s/\n\{3,\}/\r\r/         -- 删除连续两个或两个以上空行，只留一个
:s/^#.*$//g                -- 删除以#开头的行
